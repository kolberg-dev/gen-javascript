{{define "client"}}

{{- $opts := .Opts -}}

{{- if .Services}}
//
// Client
//
{{ range .Services}}
{{if $opts.Export}}export {{end}}class {{.Name}} {
  constructor(hostname, fetch) {
    this.path = '/rpc/{{.Name}}/'
    this.hostname = hostname
    this.fetch = fetch
  }

  url(name) {
    return this.hostname + this.path + name
  }
  {{range .Methods}}
  {{firstLetterToLower .Name}} = ({{if len .Inputs}}args, {{end}}headers) => {
    return this.fetch(
      this.url('{{.Name}}'),
      {{- if .Inputs | len}}
      createHTTPRequest(args, headers)
      {{- else}}
      createHTTPRequest({}, headers)
      {{- end}}
    ).then((res) => {
      return buildResponse(res).then(_data => {
        return {
        {{- $outputsCount := .Outputs|len -}}
        {{- range $i, $output := .Outputs}}
          {{$output.Name}}: {{if not (isBaseType $output.Type)}}new {{$output.Type}}{{end}}(_data.{{$output.Name}}){{listComma $i $outputsCount}}
        {{- end}}
        }
      })
    })
  }
  {{end}}
}
{{end -}}
{{end -}}
{{end}}